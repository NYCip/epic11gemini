version: '3.8'

services:
  # Test PostgreSQL Database
  postgres-test:
    image: pgvector/pgvector:pg16
    container_name: epic_postgres_test
    environment:
      POSTGRES_DB: epic_v11_test
      POSTGRES_USER: epic_admin
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U epic_admin -d epic_v11_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test Redis Cache
  redis-test:
    image: redis:7-alpine
    container_name: epic_redis_test
    command: redis-server --requirepass test_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "test_redis", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Control Panel Backend Test
  control-panel-test:
    build: ./control_panel_backend
    container_name: epic_control_panel_test
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://epic_admin:test_password@postgres-test:5432/epic_v11_test
      REDIS_URL: redis://:test_redis@redis-test:6379
      JWT_SECRET: test_jwt_secret
      TESTING: "true"
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MCP Server Test
  mcp-server-test:
    build: ./mcp_server
    container_name: epic_mcp_test
    depends_on:
      postgres-test:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://epic_admin:test_password@postgres-test:5432/epic_v11_test
      MCP_SERVER_PORT: 9000
      TESTING: "true"
    ports:
      - "9001:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 10s
      timeout: 5s
      retries: 3